<h3 class="text-center mt-5 mb-5">Modifier une dépense</h3>
<div class="container center mb-5">
  <div class="row justify-content-center">
    <div class="col-12 col-md-6 col-lg-6">
      <div class="center">
        <%= simple_form_for [@building, @expense] do |f| %>
          <%= f.input :date, :order => [:day, :month, :year] %>
          <%= f.input :company_id, collection: @companies, label: "Selectionnez une société", include_blank: "n/a - détention en nom propre", include_hidden: false, class:"field_input" %>
          <%= f.input :building_id, collection: @buildings, label: "Selectionnez un immeuble", include_blank: "n/a - aucun immeuble", include_hidden: false %>
          <%= f.input :apartment_id, label: "Appartement concerné", collection: @apartments, include_blank:  "Tous les appartements", include_hidden: false %>
          <%= f.input :expense_type, label: "Type de dépense", collection:
              [
              "Assurance",
              "Eau",
              "Electricité",
              "Frais bancaire",
              "Honoraire de gestion",
              "Frais de nettoyage",
              "Maintenance chaudière",
              "Remplacement chaudière",
              "Réparation, entretien et amélioration",
              "Intérêt d'emprunt",
              "Taxe foncière",
              "Frais de notaire",
              "Frais de dossiers et caution",
              "Charges non payées au départ du locataire"
              ] %>
          <%= f.input :supplier, label: "Nom du fournisseur et description" %>
          <%= f.input :amount_ttc, label: "Montant TTC" %>
          <% #if @expense.building.company.corporate_tax == true %>
          <%= f.input :amount_vat, label: "Montant de TVA"%>
          <%# else %>
          <%#= f.input :amount_vat, as: :hidden, label: "Montant de TVA"%>
          <%# end %>
          <%= f.input :photo, label: false %>
          <%= f.input :photo_cache, as: :hidden %>
          <%= f.input :deductible, as: :radio_buttons, collection: [[true, "Oui"], [false, "Non"]], label_method: :second, value_method: :first, label: "Charge déductible" %>
          <%= f.submit "Modifier", class: "btn btn-yellow-mustard mb-2" %>
          <%= link_to "Annuler", root_path, class:"btn btn-danger mb-2" %>
        <% end %>
      </div>
    </div>
  </div>
</div>
<script>
  // Change building automatically
  document.querySelector("#expense_company_id").addEventListener("change", (event) => {
    let urlPath = origin
    let url = urlPath + "/expenses.json"
    // GET REQUEST
    fetch(url)
     .then(response => response.json())
      .then((data) => {
        const input = document.querySelector("#expense_company_id");
        const output = document.querySelector("#expense_building_id");
        // Get the information in the field company
        const input_data = input.options[input.selectedIndex].text;
        // Delete information in the filed building
        output.innerHTML = ""
        // Add n/a - aucun immeuble
        output.insertAdjacentHTML('beforeend',
          `<option value="n/a - aucun immeuble</option>">n/a - aucun immeuble</option>`
        );
        // Add all building where company is the same as input
        data.forEach((item)=>{
          // console.log(item)
          if (item.company_name == input_data) {
            output.insertAdjacentHTML('beforeend',
              `<option value="${item.building_id}">${item.building_name}</option>`
            );
          }
        })
        const input_a = document.querySelector("#expense_building_id");
        const output_a = document.querySelector("#expense_apartment_id");
        const input_data_a = input_a.options[input_a.selectedIndex].text;
        console.log(input_data_a)
        output_a.innerHTML = ""
          // Add n/a - aucun appartement
        output_a.insertAdjacentHTML('beforeend',
          `<option value="">Tous les appartements</option>`
        );
        data.forEach((item)=>{
          if (item.apartment_building_name == input_data_a && item.apartment_company_name == input_data) {
            output_a.insertAdjacentHTML('beforeend',
              `<option value="${item.apartment_id}">${item.apartment_name}</option>`
            );
          }
        })
      }
    );
  });
  // Change tenant automatically
  document.querySelector("#expense_building_id").addEventListener("change", (event) => {
    let urlPath = origin
    let url = urlPath + "/expenses.json"
    // GET REQUEST
    fetch(url)
     .then(response => response.json())
      .then((data) => {
        const input = document.querySelector("#expense_company_id");
        const input_a = document.querySelector("#expense_building_id");
        const output_a = document.querySelector("#expense_apartment_id");
        // Get the information in the field company
        const input_data = input.options[input.selectedIndex].text;
        const input_data_a = input_a.options[input_a.selectedIndex].text;
        // Delete information in the filed building
        output_a.innerHTML = ""
         // Add n/a - aucun appartement
        output_a.insertAdjacentHTML('beforeend',
          `<option value="">Tous les appartements</option>`
        );
        // Add all building where company is the same as input
        data.forEach((item)=>{
          if (item.apartment_building_name == input_data_a && item.apartment_company_name == input_data) {
            output_a.insertAdjacentHTML('beforeend',
              `<option value="${item.apartment_id}">${item.apartment_name}</option>`
            );
          }
        })
      }
    );
  });
</script>